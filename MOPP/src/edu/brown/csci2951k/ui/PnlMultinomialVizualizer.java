/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.brown.csci2951k.ui;

import edu.brown.csci2951k.models.data.MObject;
import edu.brown.csci2951k.models.data.MObjectSet;
import edu.brown.csci2951k.models.distribution.MultinomialDistribution;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.GridLayout;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Optional;

/**
 *
 * @author Gaurav Manek
 */
public class PnlMultinomialVizualizer extends javax.swing.JPanel {

    private final Map<MObject, PnlBar> mapLbl;
    private final MObjectSet objs;
    
    /**
     * Creates new form PnlMultimodalVizualizer
     * @param objs
     */
    public PnlMultinomialVizualizer(MObjectSet objs) {
        initComponents();
        this.setLayout(new GridLayout(1, objs.size(), 3, 3));
        this.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
        this.objs = objs;
        
        mapLbl = new HashMap<>();
        
        Iterator<MObject> itr = objs.iterator();
        while(itr.hasNext()) {
            MObject s = itr.next();
            PnlBar lbl = new PnlBar(s.toString());
            mapLbl.put(s, lbl);
            this.add(lbl);
        }
    }
    
    public void setValue(MultinomialDistribution dist) {
        if(!objs.equals(dist.getObjects())){
            throw new IllegalArgumentException("Wrong MultinomialDistribution used.");
        }
        
        dist.get().stream().forEach((ke) -> {
            PnlBar lbl = mapLbl.get(ke.getKey());
            if(lbl == null) {
                throw new IllegalStateException("Trying to write value to label that does not exist.");
            }
            double v = ke.getValue();
            if(v < 0 || v > 1) {
                throw new IllegalStateException("Probabilities must be in range [0..1].");
            }
            
            lbl.setValue(v);
        });
        
        this.repaint();
    }
    
    public void setValue(Optional<MultinomialDistribution> dist) {
        if(dist.isPresent()) {
            setValue(dist.get());
        } else {
            mapLbl.forEach((MObject k, PnlBar v) -> v.setValue(0));
            this.repaint();
        }
    }
    
    public void setColor(Color c) {
        mapLbl.forEach((k, v) -> v.setColor(c));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
